version: 2.1

executors:
  node:
    docker:
      - image: circleci/node:12-buster

aliases:
  - &yarn_cache
    restore_cache:
      name: Restore Yarn cache
      keys:
        - yarn-{{ .Branch }}-{{ checksum "yarn.lock" }}
        - yarn-{{ .Branch }}-
  - &yarn
    run:
      name: Install Packages
      command: yarn --frozen-lockfile --non-interactive

jobs:
  setup:
    executor: node
    steps:
      - checkout
      - *yarn_cache
      - *yarn
      - save_cache:
          name: Save Yarn cache
          key: yarn-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

  lint:
    executor: node
    steps:
      - checkout
      - *yarn_cache
      - *yarn
      - run:
          name: ESLint
          command: yarn run lint

  typescript:
    executor: node
    steps:
      - checkout
      - *yarn_cache
      - *yarn
      - run:
          name: TypeScript
          command: yarn run check

  test:
    executor: node
    steps:
      - checkout
      - *yarn_cache
      - *yarn
      - run:
          name: Unit Tests
          command: yarn run test --maxWorkers=2

  build:
    executor: node
    parallelism: 4
    steps:
      - checkout
      - *yarn_cache
      - *yarn
      - run:
          name: Build
          command: yarn run build

  staging_site:
    executor: node
    steps:
      - checkout
      - *yarn_cache
      - *yarn
      - run:
          name: Build Staging Site
          command: |
            cd packages/site
            yarn run build --staging
      - deploy:
          name: Deploy Staging Site
          command: |
            cd packages/site
            node scripts/deploy/surge.js

  production_site:
    executor: node
    steps:
      - run:
          name: Install AWS CLI
          command: sudo apt-get -y -qq install awscli
      - checkout
      - *yarn_cache
      - *yarn
      - run:
          name: Build Production Site
          command: |
            cd packages/site
            yarn run build
      - deploy:
          name: Deploy Production Site
          command: |
            cd packages/site
            node scripts/deploy/aws.js

workflows:
  version: 2
  stable:
    jobs:
      - setup
      - lint:
          requires:
            - setup
      - typescript:
          requires:
            - setup
      - test:
          requires:
            - setup
      - build:
          requires:
            - setup
      - staging_site:
          filters:
            branches:
              ignore: master
          requires:
            - setup
      - production_site:
          filters:
            branches:
              only: master
          requires:
            - setup
