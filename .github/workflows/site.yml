name: Site

on:
  pull_request:
    branches: main
  push:
    branches: main

jobs:
  site:
    name: Publish Site
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: '14'

      - name: Setup AWS CLI
        if: github.ref == 'refs/heads/main'
        uses: chrislennon/action-aws-cli@v1.1

      - name: Get Yarn cache directory
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Use Yarn cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Use node_modules cache
        id: node-modules-cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install Dependencies
        if: |
          steps.yarn-cache.outputs.cache-hit != 'true' ||
          steps.node-modules-cache.outputs.cache-hit != 'true'
        run: yarn install --prefer-offline --frozen-lockfile --non-interactive --silent

      - name: Build Production Site
        working-directory: ./packages/site
        if: github.ref == 'refs/heads/main'
        run: yarn run build

      - name: Deploy Production Site
        working-directory: ./packages/site
        if: github.ref == 'refs/heads/main'
        run: node scripts/deploy/aws.js
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Build Staging Site
        working-directory: ./packages/site
        if: github.ref != 'refs/heads/main'
        run: yarn run build --staging

      - name: Deploy Staging Site
        working-directory: ./packages/site
        if: github.ref != 'refs/heads/main'
        run: node scripts/deploy/surge.js
        env:
          PR_NUMBER: ${{ github.event.pull_request.number }}
          SURGE_LOGIN: ${{ secrets.SURGE_LOGIN }}
          SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}
