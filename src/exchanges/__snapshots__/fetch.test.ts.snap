// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`on error returns error data 1`] = `
Object {
  "data": undefined,
  "error": [CombinedError: [Network] ],
  "operation": Object {
    "context": Object {
      "fetchOptions": Object {
        "method": "POST",
      },
      "meta": Object {
        "networkLatency": 100,
      },
      "requestPolicy": "cache-first",
      "url": "http://localhost:3000/graphql",
    },
    "key": 2,
    "operationName": "query",
    "query": Object {
      "definitions": Array [
        Object {
          "directives": Array [],
          "kind": "OperationDefinition",
          "name": Object {
            "kind": "Name",
            "value": "getUser",
          },
          "operation": "query",
          "selectionSet": Object {
            "kind": "SelectionSet",
            "selections": Array [
              Object {
                "alias": undefined,
                "arguments": Array [
                  Object {
                    "kind": "Argument",
                    "name": Object {
                      "kind": "Name",
                      "value": "name",
                    },
                    "value": Object {
                      "kind": "Variable",
                      "name": Object {
                        "kind": "Name",
                        "value": "name",
                      },
                    },
                  },
                ],
                "directives": Array [],
                "kind": "Field",
                "name": Object {
                  "kind": "Name",
                  "value": "user",
                },
                "selectionSet": Object {
                  "kind": "SelectionSet",
                  "selections": Array [
                    Object {
                      "alias": undefined,
                      "arguments": Array [],
                      "directives": Array [],
                      "kind": "Field",
                      "name": Object {
                        "kind": "Name",
                        "value": "id",
                      },
                      "selectionSet": undefined,
                    },
                    Object {
                      "alias": undefined,
                      "arguments": Array [],
                      "directives": Array [],
                      "kind": "Field",
                      "name": Object {
                        "kind": "Name",
                        "value": "firstName",
                      },
                      "selectionSet": undefined,
                    },
                    Object {
                      "alias": undefined,
                      "arguments": Array [],
                      "directives": Array [],
                      "kind": "Field",
                      "name": Object {
                        "kind": "Name",
                        "value": "lastName",
                      },
                      "selectionSet": undefined,
                    },
                  ],
                },
              },
            ],
          },
          "variableDefinitions": Array [
            Object {
              "defaultValue": undefined,
              "directives": Array [],
              "kind": "VariableDefinition",
              "type": Object {
                "kind": "NamedType",
                "name": Object {
                  "kind": "Name",
                  "value": "String",
                },
              },
              "variable": Object {
                "kind": "Variable",
                "name": Object {
                  "kind": "Name",
                  "value": "name",
                },
              },
            },
          ],
        },
      ],
      "kind": "Document",
      "loc": Object {
        "end": 124,
        "start": 0,
      },
    },
    "variables": Object {
      "name": "Clara",
    },
  },
}
`;

exports[`on error returns error data with status 400 and manual redirect mode 1`] = `
Object {
  "data": undefined,
  "error": [CombinedError: [Network] ],
  "operation": Object {
    "context": Object {
      "fetchOptions": [MockFunction] {
        "calls": Array [
          Array [],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": Object {
              "redirect": "manual",
            },
          },
        ],
      },
      "meta": Object {
        "networkLatency": 100,
      },
      "requestPolicy": "cache-first",
      "url": "http://localhost:3000/graphql",
    },
    "key": 2,
    "operationName": "query",
    "query": Object {
      "definitions": Array [
        Object {
          "directives": Array [],
          "kind": "OperationDefinition",
          "name": Object {
            "kind": "Name",
            "value": "getUser",
          },
          "operation": "query",
          "selectionSet": Object {
            "kind": "SelectionSet",
            "selections": Array [
              Object {
                "alias": undefined,
                "arguments": Array [
                  Object {
                    "kind": "Argument",
                    "name": Object {
                      "kind": "Name",
                      "value": "name",
                    },
                    "value": Object {
                      "kind": "Variable",
                      "name": Object {
                        "kind": "Name",
                        "value": "name",
                      },
                    },
                  },
                ],
                "directives": Array [],
                "kind": "Field",
                "name": Object {
                  "kind": "Name",
                  "value": "user",
                },
                "selectionSet": Object {
                  "kind": "SelectionSet",
                  "selections": Array [
                    Object {
                      "alias": undefined,
                      "arguments": Array [],
                      "directives": Array [],
                      "kind": "Field",
                      "name": Object {
                        "kind": "Name",
                        "value": "id",
                      },
                      "selectionSet": undefined,
                    },
                    Object {
                      "alias": undefined,
                      "arguments": Array [],
                      "directives": Array [],
                      "kind": "Field",
                      "name": Object {
                        "kind": "Name",
                        "value": "firstName",
                      },
                      "selectionSet": undefined,
                    },
                    Object {
                      "alias": undefined,
                      "arguments": Array [],
                      "directives": Array [],
                      "kind": "Field",
                      "name": Object {
                        "kind": "Name",
                        "value": "lastName",
                      },
                      "selectionSet": undefined,
                    },
                  ],
                },
              },
            ],
          },
          "variableDefinitions": Array [
            Object {
              "defaultValue": undefined,
              "directives": Array [],
              "kind": "VariableDefinition",
              "type": Object {
                "kind": "NamedType",
                "name": Object {
                  "kind": "Name",
                  "value": "String",
                },
              },
              "variable": Object {
                "kind": "Variable",
                "name": Object {
                  "kind": "Name",
                  "value": "name",
                },
              },
            },
          ],
        },
      ],
      "kind": "Document",
      "loc": Object {
        "end": 124,
        "start": 0,
      },
    },
    "variables": Object {
      "name": "Clara",
    },
  },
}
`;

exports[`on success returns response data 1`] = `
Object {
  "data": Object {
    "data": Object {
      "user": 1200,
    },
  },
  "error": undefined,
  "operation": Object {
    "context": Object {
      "fetchOptions": [MockFunction] {
        "calls": Array [
          Array [],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": Object {},
          },
        ],
      },
      "meta": Object {
        "networkLatency": 100,
      },
      "requestPolicy": "cache-first",
      "url": "http://localhost:3000/graphql",
    },
    "key": 2,
    "operationName": "query",
    "query": Object {
      "definitions": Array [
        Object {
          "directives": Array [],
          "kind": "OperationDefinition",
          "name": Object {
            "kind": "Name",
            "value": "getUser",
          },
          "operation": "query",
          "selectionSet": Object {
            "kind": "SelectionSet",
            "selections": Array [
              Object {
                "alias": undefined,
                "arguments": Array [
                  Object {
                    "kind": "Argument",
                    "name": Object {
                      "kind": "Name",
                      "value": "name",
                    },
                    "value": Object {
                      "kind": "Variable",
                      "name": Object {
                        "kind": "Name",
                        "value": "name",
                      },
                    },
                  },
                ],
                "directives": Array [],
                "kind": "Field",
                "name": Object {
                  "kind": "Name",
                  "value": "user",
                },
                "selectionSet": Object {
                  "kind": "SelectionSet",
                  "selections": Array [
                    Object {
                      "alias": undefined,
                      "arguments": Array [],
                      "directives": Array [],
                      "kind": "Field",
                      "name": Object {
                        "kind": "Name",
                        "value": "id",
                      },
                      "selectionSet": undefined,
                    },
                    Object {
                      "alias": undefined,
                      "arguments": Array [],
                      "directives": Array [],
                      "kind": "Field",
                      "name": Object {
                        "kind": "Name",
                        "value": "firstName",
                      },
                      "selectionSet": undefined,
                    },
                    Object {
                      "alias": undefined,
                      "arguments": Array [],
                      "directives": Array [],
                      "kind": "Field",
                      "name": Object {
                        "kind": "Name",
                        "value": "lastName",
                      },
                      "selectionSet": undefined,
                    },
                  ],
                },
              },
            ],
          },
          "variableDefinitions": Array [
            Object {
              "defaultValue": undefined,
              "directives": Array [],
              "kind": "VariableDefinition",
              "type": Object {
                "kind": "NamedType",
                "name": Object {
                  "kind": "Name",
                  "value": "String",
                },
              },
              "variable": Object {
                "kind": "Variable",
                "name": Object {
                  "kind": "Name",
                  "value": "name",
                },
              },
            },
          ],
        },
      ],
      "kind": "Document",
      "loc": Object {
        "end": 124,
        "start": 0,
      },
    },
    "variables": Object {
      "name": "Clara",
    },
  },
}
`;
